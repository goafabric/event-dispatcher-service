#application
server:
  port: 50500
  tomcat.threads.max: 20
  forward-headers-strategy: FRAMEWORK

#monitoring
management:
  endpoint:
    health:
      probes:
        enabled: true
      show-details: never
  endpoints:
    web:
      exposure:
        include: "health,prometheus,heapdump"

#tracing
spring.application.name: event-dispatcher
management.tracing.sampling.probability: "1.0"
logging.level.io.opentelemetry.exporter: "OFF"
management.otlp.tracing.endpoint: "http://localhost:4318/v1/traces"

#broker
spring:
  kafka:
    bootstrap-servers: "localhost:9092"
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      properties.spring.json.trusted.packages: "*"
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    template:
      observation-enabled: true
    listener:
      observation-enabled: true

#logging
logging.pattern.level: "%5p tenantId=%X{tenantId:-}"

logging.level.root: "WARN"
logging.level.org.springframework: "INFO"

logging.level.org.goafabric: "INFO"
logging.level.org.flywaydb.core: "INFO"
logging.level.org.hibernate.SQL: "INFO"

#logging.pattern.console: "%white(%d{ISO8601}) %highlight(%-5level) [%blue(%t)] %yellow(%C{1.}): %msg%n%throwable"

